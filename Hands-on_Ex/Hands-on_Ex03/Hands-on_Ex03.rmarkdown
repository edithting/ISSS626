---
title: "Hands-on Exercise 3"
---

```{r}
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
pacman::p_load(sf, raster, spatstat, sparr, tmap, tidyverse, lubridate)
```

### Read & Prepare Study Area

```{r}
library(sf)
library(tmap)
library(dplyr)
library(readr)
library(rmapshaper)

# Read shapefile
kbb_sf <- st_read("data/KBB.shp", quiet = TRUE)
kbb_sf <- st_zm(kbb_sf, drop = TRUE, what = "ZM")
kbb_sf <- st_make_valid(kbb_sf)

# Simplify to make rendering faster
kbb_sf <- ms_simplify(kbb_sf, keep = 0.02)

# Read forest fire data (FF.csv must have LONG and LAT columns)
ff <- read.csv("data/FF.csv")

# Convert to sf
ff_sf <- st_as_sf(ff, coords = c("LONG", "LAT"), crs = 4326)


```

### Import & Tidy Forest Fire Data

```{r}
# Check data
print(kbb_sf)
head(ff_sf)
```

### Visualise Forest Fires

```{r}
tmap_mode("plot")  # static maps, works in Quarto
tm_shape(KBB_simplified) +
  tm_polygons("lightgrey", border.col = "white") +
  tm_shape(FF_sf) +
  tm_dots(col = "red", size = 0.1, alpha = 0.5)
  # static mode, avoids crashes


```

### Convert Fires to `ppp` by Month

```{r}
# Convert fire points to spatstat ppp
ff_ppp <- as.ppp(ff_sf)

# Rescale to kilometers
ff_ppp_km <- spatstat.geom::rescale(ff_ppp, 1000, "km")

ff_ppp_km
```

### Spatio-Temporal KDE

```{r}
# KDE with Diggle bandwidth
kde_map <- density(ff_ppp_km, sigma = bw.diggle(ff_ppp_km),
                   edge = TRUE, kernel = "gaussian")

plot(kde_map, main = "Kernel Density of Forest Fires")
```

### Plot KDE (Jul - Dec)

```{r}
# Clark–Evans test for spatial randomness
clarkevans.test(ff_ppp, correction = "none", alternative = "two.sided")

```

### STKDE by Day of Year

```{r}
# Aggregate fires into polygons (count per region)
ff_joined <- st_join(kbb_sf, ff_sf, join = st_contains)

# Count number of fires per polygon
fire_count <- ff_joined %>%
  group_by(geometry) %>%
  summarise(Fire_Count = n())

# Build neighbors list
nb <- poly2nb(fire_count)
lw <- nb2listw(nb, style = "W")

# Moran’s I
moran.test(fire_count$Fire_Count, lw)

```

## Improved STKDE using Bootstrap Bandwidth

```{r}
# Local Moran’s I
local_moran <- localmoran(fire_count$Fire_Count, lw)

# Add results back to sf
fire_count$Ii <- local_moran[, "Ii"]
fire_count$Cluster <- factor(ifelse(local_moran[, "Pr(z > 0)"] < 0.05,
                                    ifelse(local_moran[, "Ii"] > 0, "High-High", "Low-Low"),
                                    "Not Significant"))

# Map LISA clusters
tm_shape(fire_count) +
  tm_polygons("Cluster", palette = c("red", "blue", "grey"),
              title = "LISA Cluster") +
  tm_layout(main.title = "Local Moran’s I (LISA) of Forest Fires")

```

